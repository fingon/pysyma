-*- outline -*-

* Python System Manager(tm)

Essentially, a collection of independent Python processes.

** Notable ideas (in random order)

- (restartable, upgradeable) core Python process per device

- encrypted communications between devices

- a number of subsidiary Python processes per device

- that can share the communication channel(/state) with the core process

** Current goals

- my home automation system ( https://github.com/fingon/kodin-henki )

why? each 'computer', CPE, Raspberry PI runs a particular subset of the
Python things, and maintaining the software to be up to date and working on
each is hard work by hand. hopefully this makes it easier

- lightweight hncp debugging tool ( see hncptool.py )

** Design

+ implement DNCP core in Python

 + support for read-only mode

+ implement HNCP DNCP-profile in Python on top of DNCP core

 + additional local client-server using ::1 connections

+ add custom SHSP key=value store and simple psk-based authentication for
ot

** TBD

- better encoding for SHSP key=value data

- implement the actual Python process restarts using this; in theory it
  should not be hard (and can just e.g. provide local HTTPServer instances
  which serve the content which has URL + MD5 stamp in the SHSP state)
